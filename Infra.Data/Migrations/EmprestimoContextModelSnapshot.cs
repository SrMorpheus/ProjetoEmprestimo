// <auto-generated />
using System;
using Infra.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infra.Data.Migrations
{
    [DbContext(typeof(EmprestimoContext))]
    partial class EmprestimoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Domain.models.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDevolucao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataTransacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DescricaoDevolucao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DescricaoEmprestimo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Emprestimos");
                });

            modelBuilder.Entity("Domain.models.HistoricoEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UltilazadorEmprestimoId")
                        .HasColumnType("integer");

                    b.Property<int?>("UltilizadorEmprestimoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UltilizadorEmprestimoId");

                    b.ToTable("HistoricoEmails");
                });

            modelBuilder.Entity("Domain.models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("NomeItem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Obervacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("QuantidadeDisponivel")
                        .HasColumnType("integer");

                    b.Property<int>("QuantidadeTotal")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("Domain.models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("LoginUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UsuarioId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId1");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("Domain.models.TipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeTipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoUsuarios");
                });

            modelBuilder.Entity("Domain.models.TipoUtilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NomeTipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoUtilizadores");
                });

            modelBuilder.Entity("Domain.models.UltilizadorEmprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmprestimoId")
                        .HasColumnType("integer");

                    b.Property<int>("UtilizadorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmprestimoId");

                    b.HasIndex("UtilizadorId");

                    b.ToTable("UltilizadorEmprestimos");
                });

            modelBuilder.Entity("Domain.models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoUsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Domain.models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeUltilizador")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoUtilazdorId")
                        .HasColumnType("integer");

                    b.Property<int?>("TipoUtilizadorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TipoUtilizadorId");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("Domain.models.Emprestimo", b =>
                {
                    b.HasOne("Domain.models.Item", null)
                        .WithMany("emprestimos")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.models.Usuario", null)
                        .WithMany("Emprestimos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.models.HistoricoEmail", b =>
                {
                    b.HasOne("Domain.models.UltilizadorEmprestimo", null)
                        .WithMany("HistoricoEmails")
                        .HasForeignKey("UltilizadorEmprestimoId");
                });

            modelBuilder.Entity("Domain.models.Item", b =>
                {
                    b.HasOne("Domain.models.Categoria", null)
                        .WithMany("Itens")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.models.Login", b =>
                {
                    b.HasOne("Domain.models.Usuario", null)
                        .WithMany("Logins")
                        .HasForeignKey("UsuarioId1");
                });

            modelBuilder.Entity("Domain.models.UltilizadorEmprestimo", b =>
                {
                    b.HasOne("Domain.models.Emprestimo", null)
                        .WithMany("UltilizadorEmprestimos")
                        .HasForeignKey("EmprestimoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.models.Utilizador", null)
                        .WithMany("UltilizadorEmprestimos")
                        .HasForeignKey("UtilizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.models.Usuario", b =>
                {
                    b.HasOne("Domain.models.TipoUsuario", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.models.Utilizador", b =>
                {
                    b.HasOne("Domain.models.TipoUtilizador", null)
                        .WithMany("utilizadores")
                        .HasForeignKey("TipoUtilizadorId");
                });

            modelBuilder.Entity("Domain.models.Categoria", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("Domain.models.Emprestimo", b =>
                {
                    b.Navigation("UltilizadorEmprestimos");
                });

            modelBuilder.Entity("Domain.models.Item", b =>
                {
                    b.Navigation("emprestimos");
                });

            modelBuilder.Entity("Domain.models.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Domain.models.TipoUtilizador", b =>
                {
                    b.Navigation("utilizadores");
                });

            modelBuilder.Entity("Domain.models.UltilizadorEmprestimo", b =>
                {
                    b.Navigation("HistoricoEmails");
                });

            modelBuilder.Entity("Domain.models.Usuario", b =>
                {
                    b.Navigation("Emprestimos");

                    b.Navigation("Logins");
                });

            modelBuilder.Entity("Domain.models.Utilizador", b =>
                {
                    b.Navigation("UltilizadorEmprestimos");
                });
#pragma warning restore 612, 618
        }
    }
}
